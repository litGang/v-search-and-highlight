!(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
      ? define(t)
      : (e.VSearchAndHighlight = t());
})(this, function() {
  'use strict';
  function e(e, t) {
    const { keyword: n, filter: o } = t.value,
      i = 'sah';
    [].forEach.call(e.querySelectorAll(`mark.${i}`), function(e) {
      e.parentNode.replaceChild(e.firstChild, e);
    }),
      (function e(t, n) {
        if (n) {
          if (n.hasChildNodes())
            for (let i = n.childNodes.length - 1; i > -1; i--) {
              const r = n.childNodes[i];
              'function' == typeof o ? o(r) && e(t, r) : e(t, r);
            }
          if (3 === n.nodeType) {
            const e = n.textContent || '';
            if (!e.trim()) return;
            const o = (function(e, t, n) {
              const o = t.replace(
                  /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
                  '\\$&'
                ),
                i = new RegExp(o, 'gi');
              return e.replace(i, `<mark class="${n}">${t}</mark>`);
            })(e, t, i);
            let r = document.createElement('div');
            r.innerHTML = o;
            const c = n.parentNode,
              d = r.childNodes;
            for (; d.length; ) c.insertBefore(d[0], n);
            c.removeChild(n), (r = null);
          }
        }
      })(n, e);
  }
  const t = { inserted: e, componentUpdated: e };
  return {
    install(e, n) {
      e.directive('search-and-highlight', t);
    }
  };
});
